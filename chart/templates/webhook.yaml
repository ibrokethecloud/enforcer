apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Release.Name }}
          image: {{ printf "%s:%s" .Values.image.repository .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - "/docker-entrypoint.sh"
          args:
            - "enforcer"
            - "-severity"
            - "CRITICAL"
            - "-tls-cert-file"
            - "/certs/cert.pem"
            - "-tls-key-file"
            - "/certs/key.pem"
            - "-port"
            - "443"
          volumeMounts:
            - name: webhook-certs
              mountPath: /certs
              readOnly: true
            {{- if .Values.persistence.enabled }}
            - name: persistent-cache
              mountPath: /root/.cache/
            {{ end }}  
      volumes:
        - name: webhook-certs
          secret:
            secretName: enforcer-certs
        {{- if .Values.persistence.enabled }}
        - name: persistent-cache
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-pvc
        {{- end }}      
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
spec:
  ports:
  - port: 443
    targetPort: 443
  selector:
    app: {{ .Release.Name }}
