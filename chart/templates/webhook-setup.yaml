{{- if .Values.replicaCount -}}
{{- $altNames := list ( printf "%s.%s.svc" .Release.Name .Release.Namespace )  }}
{{- $ca := genCA "enforcer-ca" 365 }}
{{- $cert := genSignedCert .Release.Name nil $altNames 365 $ca }}
apiVersion: v1
annotations:
  "helm.sh/hook": "pre-install"
  "helm.sh/hook-delete-policy": "before-hook-creation"
data:
  cert.pem: {{ $cert.Cert | b64enc }}
  key.pem: {{ $cert.Key | b64enc }}
kind: Secret
metadata:
  creationTimestamp: null
  name: enforcer-certs
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
    kind: validating
webhooks:
  - name: {{ printf "%s.%s" .Release.Name .Release.Namespace }}.enforcer.svc
    clientConfig:
      service:
        name: {{ .Release.Name }}
        namespace: {{ .Release.Namespace }}
        path: "/validate"
      caBundle: {{ $ca.Cert | b64enc }}
    rules:
      - operations: [ "CREATE","UPDATE" ]
        apiGroups: ["*"]
        apiVersions: ["*"]
        resources: ["pods","deployment","daemonset"]
{{- end -}}